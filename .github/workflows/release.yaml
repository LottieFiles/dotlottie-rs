name: Release

on:
  pull_request:
    types: [closed]
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-apple:
    runs-on: macos-latest-large
    if: github.head_ref == 'release' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@master
      - uses: ningenMe/setup-rustup@v1.1.0

      - name: Install Make
        run: brew install make

      - name: Build Setup
        run: make mac-setup
        env:
          TARGET: apple

      - name: Build Apple
        run: |
          rm -f /usr/local/lib/libjpeg*
          make apple

      - name: Upload Apple Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotlottie-player.darwin.tar.gz
          path: release/apple/dotlottie-player.darwin.tar.gz
          if-no-files-found: error

  build-android:
    runs-on: macos-latest
    if: github.head_ref == 'release' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@master
      - uses: ningenMe/setup-rustup@v1.1.0

      - name: Install Make
        run: brew install make

      - name: Build Setup
        run: make mac-setup
        env:
          TARGET: android

      - name: Build Android
        run: make android

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4.0.0
        with:
          name: dotlottie-player.android.tar.gz
          path: release/android/dotlottie-player.android.tar.gz
          if-no-files-found: error

  build-wasm:
    runs-on: macos-latest
    if: github.head_ref == 'release' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
      - uses: Homebrew/actions/setup-homebrew@master
      - uses: ningenMe/setup-rustup@v1.1.0

      - name: Install Make
        run: brew install make

      - name: Build Setup
        run: make mac-setup
        env:
          TARGET: wasm

      - name: Build WASM
        run: make wasm

      - name: Upload WASM Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotlottie-player.wasm.tar.gz
          path: release/wasm/dotlottie-player.wasm.tar.gz
          if-no-files-found: error

      - name: Build WASM (webgpu)
        run: make wasm-webgpu

      - name: Upload WASM (webgpu) Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotlottie-player.webgpu.wasm.tar.gz
          path: release/wasm/dotlottie-player.wasm.tar.gz
          if-no-files-found: error

      - name: Build WASM (webgl)
        run: make wasm-webgl

      - name: Upload WASM (webgl) Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotlottie-player.webgl.wasm.tar.gz
          path: release/wasm/dotlottie-player.wasm.tar.gz
          if-no-files-found: error

  release:
    needs: [build-apple, build-android, build-wasm]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4.1.7
        with:
          path: release
          merge-multiple: true
      - name: Install Knope
        uses: knope-dev/action@v2.0.0
        with:
          version: 0.13.0
      - run: knope release --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
