name: Release

on:
  pull_request:
    types: [closed]
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-apple:
    runs-on: macos-latest
    if: github.head_ref == 'release' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@stable
      - uses: dtolnay/rust-toolchain@nightly

      - name: Setup Apple
        run: make apple-install-targets

      - name: Build Apple
        run: make apple

      - name: Create Apple Archive
        run: tar -czf release/dotlottie-player.apple.tar.gz -C release apple/

      - name: Upload Apple Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotlottie-player.apple.tar.gz
          path: release/dotlottie-player.apple.tar.gz
          if-no-files-found: error

  build-android:
    runs-on: ubuntu-latest
    if: github.head_ref == 'release' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
      - uses: nttld/setup-ndk@v1.5.0
        id: setup-ndk
        with:
          ndk-version: r28b
          local-cache: true

      - name: Setup Android
        run: make android-install-targets

      - name: Build Android
        run: make android
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Create Android Archive
        run: tar -czf release/dotlottie-player.android.tar.gz -C release android/

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotlottie-player.android.tar.gz
          path: release/dotlottie-player.android.tar.gz
          if-no-files-found: error

  build-wasm:
    runs-on: ubuntu-latest
    if: github.head_ref == 'release' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@nightly
      - name: Setup WASM
        run: |
          make wasm-install-emsdk
          cargo install uniffi-bindgen-cpp --git https://github.com/NordSecurity/uniffi-bindgen-cpp --tag v0.7.1+v0.28.3
          make wasm-install-targets

      - name: Build WASM
        run: make wasm

      - name: Create WASM Archive
        run: tar -czf release/dotlottie-player.wasm.tar.gz -C release wasm/

      - name: Upload WASM Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotlottie-player.wasm.tar.gz
          path: release/dotlottie-player.wasm.tar.gz
          if-no-files-found: error

  release:
    needs: [build-apple, build-android, build-wasm]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4.1.7
        with:
          path: release
          merge-multiple: true
      - name: Install Knope
        uses: knope-dev/action@v2.0.0
        with:
          version: 0.13.0
      - run: knope release --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
